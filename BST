import random

class TreeNode:
    def __init__(self, key):
        self.left = None
        self.right = None
        self.val = key

def insert(root, key):
    if root is None:
        return TreeNode(key)
    else:
        if root.val < key:
            root.right = insert(root.right, key)
        else:
            root.left = insert(root.left, key)
    return root

def inorder_traversal(root):
    return inorder_traversal(root.left) + [root.val] + inorder_traversal(root.right) if root else []

# Generate a random array of size 15
random_array = random.sample(range(1, 101), 15)
print(f"Random Array: {random_array}")

# Construct BST
root = None
for num in random_array:
    root = insert(root, num)

# In-order traversal to get the sorted array
sorted_array = inorder_traversal(root)
print(f"Sorted Array: {sorted_array}")
